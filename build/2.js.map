{"version":3,"sources":["../../src/pages/list/list.module.ts","../../src/pages/list/list.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ListPage } from './list';\n\n@NgModule({\n  declarations: [\n    ListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ListPage),\n  ],\n})\nexport class ListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, Loading, AlertController } from 'ionic-angular';\n\nimport { AuthenticationProvider } from '../../providers/authentication';\nimport { ListProvider } from '../../providers/list';\n\nimport { List } from '../../models';\n\n@IonicPage({\n  name: 'list',\n  segment: 'list'\n})\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html',\n})\nexport class ListPage {\n\n  private lists: List[] = [];\n  private loading: Loading;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private alertCtrl: AlertController,\n    private authenticationProvider: AuthenticationProvider,\n    private listProvider: ListProvider,\n    private loadingCtrl: LoadingController\n  ) {\n    if (!authenticationProvider.isAuthenticated) {\n      this.navCtrl.setRoot('top');\n    }\n  }\n\n  public ionViewDidLoad() {\n    this.authenticationProvider\n      .getObserver()\n      .subscribe(isAuthenticated => {\n        if (!isAuthenticated) {\n          this.navCtrl.setRoot('top');\n        }\n      });\n\n    this.getMyLists();\n  }\n\n  public async getMyLists() {\n    try {\n      this.loading = this.loadingCtrl.create();\n      this.loading.present();\n      this.lists = await this.listProvider.getMyLists();\n    } catch (error) {\n      await this.alertCtrl.create({\n        title: 'リストの取得に失敗しました',\n        buttons: [{\n          text: 'キャンセル',\n          role: 'cancel',\n          handler: () => {\n            // どこかのページから移動してきた場合はそのページに戻る\n            if (this.navCtrl.length() > 1) {\n              this.navCtrl.pop();\n              return;\n            }\n\n            // 直接このページを開いている場合はトップページに戻る\n            this.navCtrl.setRoot('top');\n          }\n        }, {\n          text: '再試行',\n          handler: () => {\n            this.getMyLists();\n          }\n        }]\n      }).present();\n    } finally {\n      this.loading.dismiss();\n    }\n  }\n\n  public displayDate(list: List) {\n    const time = new Date(list.updated_at);\n\n    const year = time.getFullYear();\n    const month = time.getMonth() + 1;\n    const date = time.getDate();\n\n    return `${year}/${(month < 10 ? '0' : '') + month}/${(date < 10 ? '0' : '') + date}`;\n  }\n\n  public open(list: List) {\n    this.navCtrl.push('edit', list);\n  }\n\n  public async doRefresh(refresher) {\n    await this.getMyLists();\n    refresher.complete();\n  }\n\n  /** 検索ワードを入力するプロンプトを表示する */\n  public openSearch() {\n    const prompt = this.alertCtrl.create({\n      title: '検索',\n      inputs: [{\n        name: 'name',\n        placeholder: '名前'\n      }, {\n        name: 'query',\n        placeholder: 'キーワード'\n      }],\n      buttons: [{\n        text: 'キャンセル',\n        role: 'cancel'\n      }, {\n        text: '検索',\n        handler: ({ name, query }) => {\n          this.createList(name, query);\n        }\n      }]\n    });\n\n    prompt.present();\n  }\n\n  /** 新規リストを作成する */\n  private async createList(name, query) {\n    this.loading = this.loadingCtrl.create();\n    this.loading.present();\n\n    if (name === '' || query === '') {\n      await this.alertCtrl.create({\n        title: '検索できませんでした',\n        message: '名前，またキーワードは少なくとも 1 文字以上である必要があります',\n        buttons: ['閉じる']\n      }).present();\n\n      this.loading.dismiss();\n\n      return;\n    }\n\n    let isSucceeded = false;\n\n    try {\n      await this.listProvider.new(name, query);\n      isSucceeded = true;\n    } catch (error) {\n      await this.alertCtrl.create({\n        title: '検索に失敗しました',\n        buttons: [{\n          text: 'キャンセル',\n          role: 'cancel'\n        }, {\n          text: '再試行',\n          handler: () => {\n            this.createList(name, query);\n          }\n        }]\n      }).present();\n    }\n\n    this.loading.dismiss();\n\n    if (isSucceeded) {\n      // リストを再取得する\n      this.getMyLists();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts"],"sourceRoot":""}